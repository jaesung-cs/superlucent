#version 450

layout (local_size_x = 256) in;

#include "particle/particle.glsl"
#include "particle/simulation_params.glsl"
#include "particle/collision_pairs.glsl"
#include "particle/solver.glsl"

void main() 
{
	const uint index = gl_GlobalInvocationID.x;
	if (index >= Rows() + Cols())
    return;

  // lambda0
  if (index < Rows())
  {
    solver.matrix[LambdaIndex(index)] = 0.f;
  }

  // x0
  else
  {
    const uint row = index - Rows();

    uint particle_id = row / 3;
    uint coord_id = row % 3;

    float x0 = particles[particle_id].position[coord_id];

    solver.matrix[XIndex(row)] = x0;
  }
}
